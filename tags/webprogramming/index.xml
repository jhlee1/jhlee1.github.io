<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webprogramming on Code Repository</title>
    <link>https://jhlee1.github.io/tags/webprogramming/</link>
    <description>Recent content in Webprogramming on Code Repository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Feb 2019 00:44:19 +0900</lastBuildDate>
    
        <atom:link href="https://jhlee1.github.io/tags/webprogramming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL Data Definition Language</title>
      <link>https://jhlee1.github.io/2019/sql_ddl/</link>
      <pubDate>Sun, 17 Feb 2019 00:44:19 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/sql_ddl/</guid>
      <description> 1. DDL(Data Definition Language) </description>
    </item>
    
    <item>
      <title>SQL(Data Manipulation Language)</title>
      <link>https://jhlee1.github.io/2019/sql_dml/</link>
      <pubDate>Sun, 17 Feb 2019 00:35:56 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/sql_dml/</guid>
      <description>DML(Data Manipulation Language) 1. SELECT  기본형  SELECT(DISTINCT) column (ALIAS) FROM table;  SELECT - 찾는 데이터(Column)을 나열 DISTINCT - 중복행 제거 ALIAS - 나타날 Column에 대한 다른 이름 부여 FROM - 선택한 Column이 있는 테이블을 명시
 ex) 전체 데이터 검색
 SELECT * FROM DEPARTMANT;   +--------+------------+----------+ | deptno | name | location | +--------+------------+----------+ | 10 | ACCOUNTING | NEW YORK | | 20 | RESEARCH | DALLAS | | 30 | SALES | CHICAGO | | 40 | OPERATIONS | BOSTON | +--------+------------+----------+ 4 rows in set (0.</description>
    </item>
    
    <item>
      <title>SQL Basic</title>
      <link>https://jhlee1.github.io/2019/sqlbasic/</link>
      <pubDate>Sat, 16 Feb 2019 21:45:07 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/sqlbasic/</guid>
      <description>1. SQL이란  SQL은 데이터를 쉽게 검색하고 추가, 삭제, 수정 같은 조작을 할 수 있도록 만들어진 언어 RDBMS에서 데이터를 조작, 쿼리하는 표준 수단 키워드는 대소문자를 구분하지 않음 (아래의 쿼리는 모두 같다)  mysql&amp;gt; SELECT VERSION(), CURRENT_DATE; mysql&amp;gt; select version(), current_date; mysql&amp;gt; SeLeCT vErsiOn(), CUrrENT_DATE;  QUERY를 계산식으로 쓸 수 있다.  mysql&amp;gt; SELECT SIN(PI() / 4), (4+1) * 5;   +--------------------+-----------+ | SIN(PI() / 4) | (4+1) * 5 | +--------------------+-----------+ | 0.</description>
    </item>
    
    <item>
      <title>Install &amp; Set up My SQL</title>
      <link>https://jhlee1.github.io/2019/setupmysql/</link>
      <pubDate>Sat, 16 Feb 2019 21:12:24 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/setupmysql/</guid>
      <description>Set up MySQL Community Server in windows 1. 다운로드  https://www.mysql.com/downloads/ 여기서 Community Server의 다운로드 중 mysql-installer-community-X.0.XX.0.msi 받기
 web-community과 community 파일의 차이는 설치중에 파일을 받아서 설치하는 것 (인터넷 연결 필요)과 이미 설치파일에 들어있는 파일을 설치하는 것 (인터넷 연결 불필요). 따라서 설치 파일의 용량이 차이남
  2. 설치  msi파일을 실행 후 SetUp Type을 Developer Default로 설치 root 비밀번호만 정하고 Next 누르면됨 윈도우가 켜질 때 실행시키려면 Windows Service 설정에서 시작시 켜지도록 설정해놓으면 됨 환경변수 설정 - C:Program Files\MySQL\MySQL Server X.</description>
    </item>
    
    <item>
      <title>Database</title>
      <link>https://jhlee1.github.io/2019/database/</link>
      <pubDate>Fri, 15 Feb 2019 01:31:19 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/database/</guid>
      <description>Database와 DBMS(DataBase Management System) 1. 기본 개념  데이터의 집합(a Set of Data) 여러 응용 시스템(프로그램)들의 통합된 정보들을 저장하여 운영할 수 있는 공용(share) data의 집합 효율적으로 저장, 검색, 갱신할 수 있도록 데이터 집합들끼리 연관시키고 조직화되어야 한다.  2. 특성  실시간 접근성(Real-time Accessability)  사용자의 요구를 즉시 처리  계속적인 변화(Continuous Evolution)  정확한 값을 유지하려고 삽입, 삭제, 수정 작업 등을 이용해 데이터를 지속적으로 갱신  동시 공유성(Concurrent Sharing)  사용자마다 다른 목적으로 사용하므로 동시에 여러 사람이 동일한 데이터에 접근, 이용  내용 참조(Content Reference)  저장한 data의 record의 위치나 주소가 아닌 사용자가 요구하는 data의 내용, 즉 data 값에 따라 참조(reference)할 수 있어야 한다.</description>
    </item>
    
    <item>
      <title>JspBasic</title>
      <link>https://jhlee1.github.io/2019/jspbasic/</link>
      <pubDate>Wed, 06 Feb 2019 02:51:19 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/jspbasic/</guid>
      <description>JSP(Java Server Page)  모든 JSP는 Servlet으로 변경되어 작동한다. -&amp;gt; Servlet과 같은 LifeCycle을 가짐 &amp;lt;%@를 지시자라고 한다. &amp;lt;%@ page는 페이지 지시자라고 한다. JSP를 작성할 때 Servlet으로 어떻게 변경될까에 대해 생각하면서 하자 1 ~ 10까지 출력하는 예제   sum10.jsp &amp;lt;%@ page language=&amp;quot;java&amp;quot; contentType=&amp;quot;text/html; charset=UTF-8&amp;quot; pageEncoding=&amp;quot;UTF-8&amp;quot; %&amp;gt; &amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD HTML 4.01 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/html4/loose.dtd&amp;quot;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Insert title here&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;% int total = 0; for(int i = 1; i &amp;lt;= 10; i++) { total = total + i; } %&amp;gt; 1부터 10까지의 합: &amp;lt;%= total %&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;   JSP의 LifeCycle</description>
    </item>
    
    <item>
      <title>JavascriptBasic</title>
      <link>https://jhlee1.github.io/2019/javascriptbasic/</link>
      <pubDate>Thu, 31 Jan 2019 22:35:29 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/javascriptbasic/</guid>
      <description>Javascript Hoisitng 함수는 실행되기 전 함수 안의 필요한 변수값들을 미리 다 모아서 선언  ex1)
function outer() { var result = inner; console.log(result) //result: undefined error var inner = function () { return &amp;quot;inner value&amp;quot;; } }  inner의 내부값이 assign되기 전으로 처리되어 에러 발생.
실제 처리된 결과:
function outer() { var result; var inner; console.log(result); inner = function () { return &amp;quot;inner value&amp;quot;; } }  ex2)
function outer() { var result = inner(); console.</description>
    </item>
    
  </channel>
</rss>
