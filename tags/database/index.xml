<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on Code Repository</title>
    <link>https://jhlee1.github.io/tags/database/</link>
    <description>Recent content in database on Code Repository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Feb 2019 00:44:19 +0900</lastBuildDate>
    
        <atom:link href="https://jhlee1.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL Data Definition Language</title>
      <link>https://jhlee1.github.io/2019/sql_ddl/</link>
      <pubDate>Sun, 17 Feb 2019 00:44:19 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/sql_ddl/</guid>
      <description>DDL(Data Definition Language) 1. 정의  DB의 schema를 생성, 변경 제거  2. MySQL Data type  Check this link (https://dev.mysql.com/doc/refman/8.0/en/data-type-overview.html). I will summarize later  3. Create table  기본형
 CREATE TABLE tableName( field1 type [NULL | NOT NULL][DEFAULT][AUTO_INCREMENT] field2 type [NULL | NOT NULL][DEFAULT][AUTO_INCREMENT] field3 type [NULL | NOT NULL][DEFAULT][AUTO_INCREMENT] &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; PRIMARY KEY(fieldName)  );
 NULL, NOT NULL로 필드에 빈 값 허용 여부 결정
 DEFAULT - 입력 값이 없는 경우 초기값 결정</description>
    </item>
    
    <item>
      <title>SQL(Data Manipulation Language)</title>
      <link>https://jhlee1.github.io/2019/sql_dml/</link>
      <pubDate>Sun, 17 Feb 2019 00:35:56 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/sql_dml/</guid>
      <description>DML(Data Manipulation Language) 1. SELECT  기본형  SELECT(DISTINCT) column (ALIAS) FROM table;  SELECT - 찾는 데이터(Column)을 나열 DISTINCT - 중복행 제거 ALIAS - 나타날 Column에 대한 다른 이름 부여 FROM - 선택한 Column이 있는 테이블을 명시
 ex) 전체 데이터 검색
 SELECT * FROM DEPARTMANT;
+--------+------------+----------+ | deptno | name | location | +--------+------------+----------+ | 10 | ACCOUNTING | NEW YORK | | 20 | RESEARCH | DALLAS | | 30 | SALES | CHICAGO | | 40 | OPERATIONS | BOSTON | +--------+------------+----------+ 4 rows in set (0.</description>
    </item>
    
    <item>
      <title>SQL Basic</title>
      <link>https://jhlee1.github.io/2019/sqlbasic/</link>
      <pubDate>Sat, 16 Feb 2019 21:45:07 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/sqlbasic/</guid>
      <description>1. SQL이란  SQL은 데이터를 쉽게 검색하고 추가, 삭제, 수정 같은 조작을 할 수 있도록 만들어진 언어 RDBMS에서 데이터를 조작, 쿼리하는 표준 수단 키워드는 대소문자를 구분하지 않음 (아래의 쿼리는 모두 같다)  mysql&amp;gt; SELECT VERSION(), CURRENT_DATE; mysql&amp;gt; select version(), current_date; mysql&amp;gt; SeLeCT vErsiOn(), CUrrENT_DATE;  QUERY를 계산식으로 쓸 수 있다.
 mysql&amp;gt; SELECT SIN(PI() / 4), (4+1) * 5;
+--------------------+-----------+ | SIN(PI() / 4) | (4+1) * 5 | +--------------------+-----------+ | 0.</description>
    </item>
    
    <item>
      <title>Install &amp; Set up My SQL</title>
      <link>https://jhlee1.github.io/2019/setupmysql/</link>
      <pubDate>Sat, 16 Feb 2019 21:12:24 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/setupmysql/</guid>
      <description>Set up MySQL Community Server in windows 1. 다운로드  https://www.mysql.com/downloads/ 여기서 Community Server의 다운로드 중 mysql-installer-community-X.0.XX.0.msi 받기
 web-community과 community 파일의 차이는 설치중에 파일을 받아서 설치하는 것 (인터넷 연결 필요)과 이미 설치파일에 들어있는 파일을 설치하는 것 (인터넷 연결 불필요). 따라서 설치 파일의 용량이 차이남
  2. 설치  msi파일을 실행 후 SetUp Type을 Developer Default로 설치 root 비밀번호만 정하고 Next 누르면됨 윈도우가 켜질 때 실행시키려면 Windows Service 설정에서 시작시 켜지도록 설정해놓으면 됨 환경변수 설정 - C:Program Files\MySQL\MySQL Server X.</description>
    </item>
    
    <item>
      <title>Database</title>
      <link>https://jhlee1.github.io/2019/database/</link>
      <pubDate>Fri, 15 Feb 2019 01:31:19 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/database/</guid>
      <description>Database와 DBMS(DataBase Management System) 1. 기본 개념  데이터의 집합(a Set of Data) 여러 응용 시스템(프로그램)들의 통합된 정보들을 저장하여 운영할 수 있는 공용(share) data의 집합 효율적으로 저장, 검색, 갱신할 수 있도록 데이터 집합들끼리 연관시키고 조직화되어야 한다.  2. 특성  실시간 접근성(Real-time Accessability)  사용자의 요구를 즉시 처리  계속적인 변화(Continuous Evolution)  정확한 값을 유지하려고 삽입, 삭제, 수정 작업 등을 이용해 데이터를 지속적으로 갱신  동시 공유성(Concurrent Sharing)  사용자마다 다른 목적으로 사용하므로 동시에 여러 사람이 동일한 데이터에 접근, 이용  내용 참조(Content Reference)  저장한 data의 record의 위치나 주소가 아닌 사용자가 요구하는 data의 내용, 즉 data 값에 따라 참조(reference)할 수 있어야 한다.</description>
    </item>
    
  </channel>
</rss>
