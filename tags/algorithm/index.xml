<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on Code Repository</title>
    <link>https://jhlee1.github.io/tags/algorithm/</link>
    <description>Recent content in algorithm on Code Repository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Apr 2019 13:09:29 +0900</lastBuildDate>
    
        <atom:link href="https://jhlee1.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Binary Search</title>
      <link>https://jhlee1.github.io/2019/binarysearch/</link>
      <pubDate>Wed, 24 Apr 2019 13:09:29 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/binarysearch/</guid>
      <description>Binary Search  Recursive  public class Solution { public static boolean binarySearchRecursive(int[] array, int x, int left, int right) { if (left &amp;gt; right) { return false; } int mid = left + ((right - left) / 2); // To avoid integer overflow used instead of (left + right) / 2 if(array[mid] == x) { return true; } else if (x &amp;lt; array[mid]) { return binarySearchRecursive(array, x, left, mid - 1); } else { return binarySearchRecursive(array, x, mid + 1, right); } } public static boolean binarySaerchRecursive(int[] array, int x) { return binarySaerchRecursive(array, x, 0, array.</description>
    </item>
    
    <item>
      <title>Bubble Sort</title>
      <link>https://jhlee1.github.io/2019/bubblesort/</link>
      <pubDate>Mon, 22 Apr 2019 13:09:29 +0900</pubDate>
      
      <guid>https://jhlee1.github.io/2019/bubblesort/</guid>
      <description> Bubble Sort public class Solution { public static void bubblesort(int[] array) { boolean isSorted = false; int lastUnsorted = array.length - 1; while (!isSorted) { isSorted = true; for(int i = 0; i &amp;lt; lastUnsorted; i++) { if(array[i] &amp;gt; array[i+1]) { int tmp = array[i]; array[i] = array[i+1]; array[i+1] = tmp; lastSorted = false; } } lastUnsorted--; } } }  </description>
    </item>
    
    <item>
      <title>Quick Sort</title>
      <link>https://jhlee1.github.io/1/quicksort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jhlee1.github.io/1/quicksort/</guid>
      <description> Quick Sort public static void main(String[] args) { int[] arr = new int[]; quickSort(arr, 0, arr.length - 1) System.out.println(arr); } public static void quickSort(int[] arr, int left, int right) { if(left &amp;gt;= right) { return; } int pivot = (left + right) / 2; int index = partition(arr, left, right, pivot) quickSort(arr, left, index - 1); quickSort(arr, index, right); } public static int partition(int[] arr, int left, int right, int pivot) { while(left &amp;lt;= right) { while(arr[left] &amp;lt; pivot) { left++; } while(arr[right] &amp;gt; pivot) { right--; } if(left &amp;lt;= right) { swap(arr, left, right); left++; right--; } } return left }  </description>
    </item>
    
  </channel>
</rss>
